# Adding Linux machines to Active Directory

- hosts: linux
  remote_user: root
  become: yes

  tasks:

  ###### DNS

  # Installed for nslookup tests on system; not required for setup
  - name: Install the latest version of bind-utils
    package:
      name: bind-utils
      state: latest

  - name: Configure domain controller as DNS server
    template:
        src: resolv.conf.j2
        dest: /etc/resolv.conf

  - name: Configure /etc/hosts
    template:
        src: hosts.j2
        dest: /etc/hosts

  - set_fact:
      host_fqdn: '{{ inventory_hostname }}.{{ AD_DOMAIN_NAME }}'

  - name: Ensure FQDN is correctly set up
    command: hostname -f
    register: hostname_result
    changed_when: False
    failed_when: hostname_result.stdout != host_fqdn

  # ##### Kerberos
  # - name: Instantiante krb5.conf file and copy to target
  #   template:
  #     src: krb5.conf.j2
  #     dest: /etc/krb5.conf
  #
  # - name: Install the latest version of krb5-libs
  #   package:
  #     name: krb5-libs
  #     state: latest
  #
  # - name: Install the latest version of krb5-workstation
  #   package:
  #     name: krb5-workstation
  #     state: latest

  ##### NTP
  - name: Install the latest version of ntp
    package:
      name: ntp
      state: latest

  - name: Configure domain controller as NTP server
    template:
      src: ntp.conf.j2
      dest: /etc/ntp.conf
    register: ntp_config_result

  - name: Run ntp service
    when: ntp_config_result.changed
    service:
      name: ntpd
      state: restarted

  ##### SSSD
  - name: Install latest version of realmd, sssd & dependencies
    package:
      name: '{{ item }}'
      state: latest
    with_items:
      - realmd
      - oddjob
      - oddjob-mkhomedir
      - sssd
      - samba-common-tools
      - adcli

  - name: Determine already-joined domains
    command: /sbin/realm list
    register: domain_list_result
    changed_when: False
    ignore_errors: True

  - name: Configure SSSD
    when: " AD_DOMAIN_NAME not in domain_list_result.stdout "
    command: realm join '{{ AD_DOMAIN_NAME }}' --user '{{ LINUX_USERNAME }}'
    args:
      stdin: '{{ LINUX_PASSWORD }}'

  ###### Validate login
  - name: Log in as Bob
    shell: su --login 'bob@{{ AD_DOMAIN_NAME }}'
    args:
      warn: no
    changed_when: False
