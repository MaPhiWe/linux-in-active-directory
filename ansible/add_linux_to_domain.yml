# Adding Linux machines to Active Directory

- hosts: linux
  vars:
  - AD_WORKGROUP_NAME: linuxdc
  - AD_DOMAIN_NAME: linuxdc.vagrant
  - AD_DOMAINSERVER_IP: 172.16.2.50
  # TODO: Rename Vars to make sense, move to global place, adjust other playbooks

  tasks:

  ###### DNS

  # Installed for nslookup tests on system; not required for setup
  - name: Install the latest version of bind-utils
    become: true
    package:
      name: bind-utils
      state: latest

  - name: Configure domain controller as DNS server
    become: true
    template:
        src: resolv.conf.j2
        dest: /etc/resolv.conf

  - name: Get FQDN of system
    command: hostname -f
    register: hostname_result
    changed_when: False

  - name: Reset /etc/hosts
    when: hostname_result.stdout != "centos-client.linuxdc.vagrant"
    become: true
    template:
        src: hosts.j2
        dest: /etc/hosts

  - name: Add system do /etc/hosts
    when: hostname_result.stdout != "centos-client.linuxdc.vagrant"
    become: true
    shell: echo 172.16.2.51 centos-client.linuxdc.vagrant centos-client >> /etc/hosts

  ##### Kerberos
  - name: Instantiante krb5.conf file and copy to target
    become: true
    template:
      src: krb5.conf.j2
      dest: /etc/krb5.conf

  - name: Install the latest version of krb5-libs
    become: true
    package:
      name: krb5-libs
      state: latest

  - name: Install the latest version of krb5-workstation
    become: true
    package:
      name: krb5-workstation
      state: latest

  ##### NTP
  - name: Install the latest version of ntp
    become: true
    package:
      name: ntp
      state: latest

  - name: Configure domain controller as NTP server
    become: true
    template:
      src: ntp.conf.j2
      dest: /etc/ntp.conf
    register: ntp_config_result

  - name: Run ntp service
    when: ntp_config_result.changed
    become: true
    service:
      name: ntpd
      state: restarted

  ##### Samba
  - name: Install Samba
    become: true
    package:
      name: samba
      state: latest

  - name: Find Samba config file location
    shell: /usr/sbin/smbd -b | grep CONFIGFILE
    register: smbd_conf_file
    changed_when: False

  - name: Configure user map
    become: true
    template:
      src: user.map.j2
      dest: /etc/samba/user.map
      # TODO: Use path of Samba config file instead

  - name: Configure Samba
    become: true
    template:
      src: smb.conf.j2
      dest: '{{ smbd_conf_file.stdout | regex_replace("^\s*CONFIGFILE:\s*(\S*)\s*.*$", "\1") }}'
    register: samba_config_result

  - name: Restart Samba
    when: samba_config_result.changed
    become: true
    service:
      name: smb
      state: restarted

  - name: Join domain
    become: true
    command: net ads join -U vagrant%vagrant
    # TODO remove hard-coded password
    # TODO register on output and set changed_when: False when already in domain

  ###### winbind

  - name: Configure Name Service Switch to use winbind
    become: true
    template:
      src: nsswitch.conf.j2
      dest: /etc/nsswitch.conf

  - name: Install the latest version of winbind
    become: true
    package:
      name: samba-winbind
      state: latest

  - name: Install the latest version of winbind-clients
    become: true
    package:
      name: samba-winbind-clients
      state: latest

  - name: Start windbind
    become: true
    service:
      name: winbind
      state: started

  - name: Verify connection to AD users and groups
    command: getent group standard_users
    changed_when: False

  ##### activate auto-creation of home directories
  - name: Ensure that Bob's home directory does not exist
    become: true
    file:
      path: /home/bob
      state: absent

  - name: Enable auto-creation of home Directory
    become: true
    command: authconfig --enablemkhomedir --update
    # TODO register on output and set changed_when: False when already in domain

  - name: Log in as Bob
    become: true
    shell: su - bob
    args:
      warn: no
    changed_when: False

  - name: Ensure that Bob's home directory does exist
    become: true
    stat:
      path: /home/bob
    register: stat_result

  - assert: { that: stat_result.stat.exists }
